{"version":3,"file":"index.js","sources":["../src/lib/constants.js","../src/lib/utils.js","../src/lib/vuePopulator.js","../src/lib/core/setters.js","../src/lib/core/getters.js"],"sourcesContent":["export const constants = {\n    PRETTIFY_CHARS_TO_CHECK: ['-', '_'],\n};\n\nexport default constants;\n","import { constants } from './constants.js';\n\n/**\n * Returns the first character of a given string\n * @param {String} value\n */\nexport const getStringFirstChar = (value) => {\n    if (!value) return '';\n    return value.charAt(0);\n};\n\n/**\n * Returns the capitalized value of the given value\n * @param {Any} value\n */\nexport const getCapitalizedString = (value) => {\n    if (!value) return '';\n\n    const stringifiedValue = value.toString();\n    return getStringFirstChar(stringifiedValue).toUpperCase() + stringifiedValue.slice(1);\n};\n\n/**\n * Returns the prettiefied value of the given value. It means removing all the dashes and underscores found\n * @param {Any} value\n */\nexport const getPrettifiedString = (value) => {\n    if (!value) return '';\n\n    const stringifiedValue = value.toString();\n    const { PRETTIFY_CHARS_TO_CHECK: prettifyChars } = constants;\n\n    return prettifyChars.reduce((acc, char) => {\n        const firstCharMatch = acc.startsWith(char);\n        const splittedValue = acc.split(char);\n\n        if (firstCharMatch || splittedValue.length === 1) {\n            splittedValue.forEach((partialValue, index) => {\n                if ((!index && !firstCharMatch) || !partialValue) return;\n                splittedValue[index] = getStringFirstChar(partialValue).toUpperCase() + partialValue.slice(1);\n            });\n        }\n\n        return splittedValue.join('');\n    }, stringifiedValue);\n};\n","import { populateSetter } from './core/setters.js';\nimport { populateBooleanGetter } from './core/getters.js';\n\n// Default export for the Vue Populator\nconst vuePopulator = (context) => {\n    const { $data: data } = context ?? {};\n    if (!data || typeof data !== 'object' || Array.isArray(data)) return;\n\n    // Loop over the data properties of the Vue context\n    Object.keys(data).forEach((key) => {\n        // Create the setter for the current key\n        populateSetter(context, key);\n        // Create the boolean getter for the current key\n        populateBooleanGetter(context, key);\n    });\n};\n\nexport default vuePopulator;\n","import { getCapitalizedString, getPrettifiedString } from '../utils.js';\n\n/**\n * Create a generic setter given the context and the attribute key\n * @param {Object} context\n * @param {String} key\n */\nexport const populateSetter = (context, key) => {\n    // First prettify the key\n    const prettyKey = getCapitalizedString(getPrettifiedString(key));\n    context[`set${prettyKey}`] = (newValue) => (context[key] = newValue);\n};\n","import { getCapitalizedString, getPrettifiedString } from '../utils.js';\n\n/**\n * Create a boolean getter given the context and the attribute key\n * @param {Object} context\n * @param {String} key\n */\nexport const populateBooleanGetter = (context, key) => {\n    // First prettify the key\n    const prettyKey = getCapitalizedString(getPrettifiedString(key));\n\n    // Then create the boolean getter\n    Object.defineProperty(context, `has${prettyKey}`, {\n        get() {\n            return !!context[key];\n        },\n    });\n};\n"],"names":["constants","PRETTIFY_CHARS_TO_CHECK","getStringFirstChar","value","charAt","getCapitalizedString","stringifiedValue","toString","toUpperCase","slice","getPrettifiedString","prettifyChars","reduce","acc","char","firstCharMatch","startsWith","splittedValue","split","length","forEach","partialValue","index","join","context","$data","data","Array","isArray","Object","keys","key","prettyKey","newValue","populateSetter","defineProperty","get","populateBooleanGetter"],"mappings":"uDAAO,MAAMA,EAAY,CACrBC,wBAAyB,CAAC,IAAK,MCKtBC,EAAsBC,GAC1BA,EACEA,EAAMC,OAAO,GADD,GAQVC,EAAwBF,IACjC,IAAKA,EAAO,MAAO,GAEnB,MAAMG,EAAmBH,EAAMI,WAC/B,OAAOL,EAAmBI,GAAkBE,cAAgBF,EAAiBG,MAAM,IAO1EC,EAAuBP,IAChC,IAAKA,EAAO,MAAO,GAEnB,MAAMG,EAAmBH,EAAMI,YACvBN,wBAAyBU,GAAkBX,EAEnD,OAAOW,EAAcC,QAAO,CAACC,EAAKC,KAC9B,MAAMC,EAAiBF,EAAIG,WAAWF,GAChCG,EAAgBJ,EAAIK,MAAMJ,GAShC,OAPIC,GAA2C,IAAzBE,EAAcE,SAChCF,EAAcG,SAAQ,CAACC,EAAcC,MAC3BA,GAAUP,IAAoBM,IACpCJ,EAAcK,GAASpB,EAAmBmB,GAAcb,cAAgBa,EAAaZ,MAAM,OAI5FQ,EAAcM,KAAK,MAC3BjB,oBCxCekB,IAClB,MAAQC,MAAOC,GAASF,GAAW,GAC9BE,GAAwB,iBAATA,IAAqBC,MAAMC,QAAQF,IAGvDG,OAAOC,KAAKJ,GAAMN,SAASW,ICFD,EAACP,EAASO,KAEpC,MAAMC,EAAY3B,EAAqBK,EAAoBqB,IAC3DP,EAAQ,MAAMQ,KAAgBC,GAAcT,EAAQO,GAAOE,GDCvDC,CAAeV,EAASO,GEJK,EAACP,EAASO,KAE3C,MAAMC,EAAY3B,EAAqBK,EAAoBqB,IAG3DF,OAAOM,eAAeX,EAAS,MAAMQ,IAAa,CAC9CI,IAAG,MACUZ,EAAQO,MFDrBM,CAAsBb,EAASO"}